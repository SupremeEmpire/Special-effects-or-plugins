angular2 与 angular1 比较
首先，Angular2跟Angular1.x版本没有多大关系，虽然2沿用了版本1的一些概念，像directive, model, service, router, dependency injection(依赖注入)等,但是很多用法和原理都已经不是那么一回事了。

Angular2有如下一些特性：
模块化
在Angular2开发中，所有的系统功能都是模块化的，你只需要导入需要的部分。用Angular2开发的应用也是模块化的，一个模块、一个功能、甚至页面上的一个标签都是组件。
模块化带来的最大的好处就是按需加载，这就大大提高了APP的启动时的性能，也使得需要下载的代码比较小，因为不需要的模块可以不用导入。按照Angular官方的说法，使用Angular2的hello world的实例创建的App，在做完代码压缩合并以后,下载的代码在50K以内。
模块化也给开发带来方便，使得协作开发、代码合并等都非常方便。


使用TypeScript
TypeScript是Javascript的超集，TypeScript的代码会被编译成Javascript的代码再执行。所以，如果有任何的语法或其他错误，就可以在编译的时候及时发现。而这个编译的过程可以通过工具自动执行，这样就可以在你写完某一段代码的时候就发现其中的错误。
TypeScript是静态类型的，所以，我们就可以通过一些工具来实现像JAVA这样的强类型语言才会有自动补全、重构、代码查找等功能。虽然说像Webstorm这样的工具对于javascript也能提供自动代码补全之类的功能，但是他是通过检索代码里面的所有关键字，然后匹配关键字去补全，而不是通过语言自身的特性。
TypeScript具有面向对象语言的一些特性，如抽象和继承、命名空间、包等。以抽象和继承为例，虽然用js也可以实现类和类的继承关系，但是使用TypeScript我们可以直接使用interface, implements这样的语法来实现，这使得代码结构更清晰、更易读。


更容易
好吧，这只是官方的说法，要说容易也要看从什么方面来说。如果学过Angular1，你们可能知道，1非常容易上手，有一点js基础的人，几天就能学会并开始开发。如果再有一点MVC的背景或知识，就更容易了。但是2就不一样，一开始学习成本比较高，首先是因为TypeScript的语法，模块化的开发，对于没有多少开发经验的人来说，理解和上手都有一定困难。但是一旦上手以后，之后的开发和学习就比较容易了。不像Angular1，一开始的学习曲线很平缓，很容易上手，但是真正开始开发一个比较复杂的应用的时候，就会发现有很多问题，需要理解他的背后的原理，像双向绑定、模板、路由等。这时候的学习曲线就会变得很陡。
Angular2是一个完整的前端开发框架，利用Angular2提供的功能和模块，你可以开发一个完整的应用。
前面提到Angular2使用TypeScript，这也给开发带来很多便利，使得代码更易读、容易维护。


更多介绍：
http://codin.im/2016/09/15/angular2-tutorial/





